git add readme.txt
git commit -m "describe"

git status

git log
git log --pretty=oneline

git diff  对比文件

git reset --hard head /head^ /head~100 /commit_id

git reflog 查看命令历史与commit_id

工作区（Working Directory）
就是你在电脑里能看到的目录，比如我的learngit文件夹就是一个工作区

版本库（Repository）
工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库。
Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有Git为我们自动创建的第一个分支master，以及指向master的一个指针叫HEAD。
git add把文件添加进去，实际上就是把文件修改添加到暂存区；
git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支。
每次修改，如果不add到暂存区，那就不会加入到commit中

git checkout -- readme.txt  撤销工作区的修改，即回到最近一次git commit或git add时的状态
git reset HEAD file 		撤销暂存区的修改，重新放回工作区。

git rm test.txt  从版本库中删除
git commit -m "remove test.txt"
工作区删错恢复：git checkout -- test.txt

cd到repository，本地关联到远程库,添加后，远程库的名字就是origin，这是Git默认的叫法，也可以改成别的:
git remote add origin git@github.com:zwx1991jay/learngit.git
本地库推送到远程库：由于远程库是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。
git push -u origin master
只要本地作了提交，就可以通过命令：git push origin master 把本地master分支的最新修改推送至GitHub